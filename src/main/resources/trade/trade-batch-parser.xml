<beans:beans xmlns="http://www.springframework.org/schema/batch"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:c24="http://schema.c24.biz/spring-core"
             xmlns:bat-c24="http://schema.c24.biz/spring-batch"
             xmlns:task="http://www.springframework.org/schema/task"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="
         http://schema.c24.biz/spring-core
         http://schema.c24.biz/spring-core.xsd
         http://schema.c24.biz/spring-batch
         http://schema.c24.biz/spring-batch-3.0.0.xsd
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/task
         http://www.springframework.org/schema/task/spring-task.xsd
         http://www.springframework.org/schema/batch
         http://www.springframework.org/schema/batch/spring-batch.xsd">

    <!-- ======================================================================

     Spring Batch job that parses trades from a zip file and processes in batch size set by commit-interval
     Each Batch is sent to an ItemReader gateway for further processing in Spring Integration

     ====================================================================== -->

    <!-- A no-op transaction manager -->
    <beans:bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>

    <!-- An in-memory job repository -->
    <beans:bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean"/>

    <!-- A simple job launcher which kicks off tasks asynchronously -->
    <beans:bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <beans:property name="jobRepository" ref="jobRepository" />
        <beans:property name="taskExecutor">
            <beans:bean class="org.springframework.core.task.SimpleAsyncTaskExecutor"/>
        </beans:property>
    </beans:bean>

    <!-- The iO model we're going to use -->
    <c24:model id="tradeModel" base-element="biz.c24.trades.TradesElement"/>

    <!-- File source to allow us to read from ZIP files -->
    <beans:bean id="zipFileSource" class="biz.c24.io.spring.batch.reader.source.ZipFileSource" scope="step" />

    <task:executor id="fileLoadingPool" pool-size="8"/>

    <bat-c24:item-reader id="ioItemReader" model-ref="tradeModel" source-ref="zipFileSource" elementStartPattern=".*" validate="true" />

    <job id="fileLoader">
        <step id="parseFile">
            <tasklet task-executor="fileLoadingPool" throttle-limit="8">
                <chunk reader="ioItemReader" writer="tradeItemWriterGateway" commit-interval="1000"/>
            </tasklet>
        </step>
    </job>

    <beans:bean id="jobMessageLauncher"
                class="org.springframework.batch.integration.launch.JobLaunchingMessageHandler">
        <beans:constructor-arg ref="jobLauncher"/>
    </beans:bean>


</beans:beans>